<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="goods">
	<resultMap id="BaseResultMap" type="java.util.HashMap"></resultMap>
	<parameterMap id="BaseParameterMap" type="java.util.HashMap"></parameterMap>
	<!-- 根据商品类别ID查询商品 -->
	<select id="selectGoodsByGoodsType" parameterMap="BaseParameterMap"
		resultMap="BaseResultMap">
		SELECT *
		FROM sc_goods
		WHERE GTYPE_FK = #{GTYPE_PID}
	</select>

	<!-- 根据商品id查询单个商品详细信息 -->
	<select id="selectGoosByGid" parameterMap="BaseParameterMap"
		resultMap="BaseResultMap">
		SELECT
		GOODS_PK, GTYPE_FK, GOODS_NAME, GOODS_TYPE,
		GOODS_PRICE, GOODS_TRUE_PRICE,
		GOODS_CODE, IS_USE, GOODS_DW,
		GOODS_PXXH, GOODS_SPECIFICATION,
		GOODS_RECIPE, GOODS_TASTE, GOODS_DESC
		,GOODS_LABEL, SHOW_RANGE,
		PICTURE_URL, GTYPE_NAME, GTYPE_AREA,
		GOODS_INTRODUCTION
		FROM
		sc_goods g,sc_goods_type gt
		WHERE
		GOODS_PK =
		#{GOODS_ID}
		AND gt.GTYPE_PK = g.GTYPE_FK;
	</select>

	<!-- 根据类别id查询该类下的商品基本信息 -->
	<select id="selectBaseGoosListByGid" parameterMap="BaseParameterMap"
		resultMap="BaseResultMap">
		SELECT GOODS_PK, GOODS_NAME, GOODS_TYPE, GOODS_PRICE,
		GOODS_TRUE_PRICE, GOODS_DW,GOODS_PXXH
		FROM sc_goods
		WHERE GTYPE_FK = #{GTYPE_ID}
		ORDER BY CAST(GOODS_PXXH AS SIGNED integer);
	</select>
	<!-- 根据商品id删除指定商品 -->
	<delete id="deleteGoodsById" parameterMap="BaseParameterMap">
		DELETE FROM sc_goods
		WHERE GOODS_PK = #{GOODS_ID};
	</delete>

	<!-- 根据商品id查询当前类别有多少商品、当前商品的排序序号、当前商品的类别id -->
	<select id="selectGoodsCountByGoodsId" parameterMap="BaseParameterMap"
		resultMap="BaseResultMap">
		SELECT
		pg.GTYPE_FK, pg.GOODS_PXXH, COUNT(GOODS_PK) as
		goodsCount
		FROM
		sc_goods g, (
		SELECT
		GOODS_PXXH,GTYPE_FK
		FROM
		sc_goods WHERE
		GOODS_PK = #{GOODS_ID}) pg
		WHERE pg.GTYPE_FK = g.GTYPE_FK;
	</select>

	<!-- 修改或删除商品, 之前位置后边的商品排序序号依次减少 ; 插入或添加商品, 之前位置后边的商品排序序号依次增加 -->
	<update id="updateGoodsPxxhById" parameterMap="BaseParameterMap">
		UPDATE
		sc_goods
		SET
		GOODS_PXXH = CAST(GOODS_PXXH AS SIGNED integer)
		<choose>
			<when test="sub == true">
				-
			</when>
			<otherwise>
				+
			</otherwise>
		</choose>
		1
		WHERE
		<choose>
			<when test="GOODS_ID != null and GOODS_ID != ''">
				GTYPE_FK = (SELECT g.GTYPE_FK FROM (SELECT GTYPE_FK
				FROM sc_goods WHERE
				GOODS_PK = #{GOODS_ID}) g)
			</when>
			<otherwise>
				GTYPE_FK = #{GTYPE_ID}
			</otherwise>
		</choose>
		AND
		CAST(GOODS_PXXH AS SIGNED integer) >= CAST(#{SMALL_GOODS_PXXH} AS
		SIGNED integer)
		<if test="BIG_GOODS_PXXH != null and BIG_GOODS_PXXH != ''">
			AND
			CAST(GOODS_PXXH AS SIGNED integer) &lt;=
			CAST(#{BIG_GOODS_PXXH} AS SIGNED integer);
		</if>
		;
	</update>

	<insert id="insertGoods" parameterMap="BaseParameterMap">
		INSERT INTO sc_goods
		(
		GOODS_PK,
		GTYPE_FK,
		GOODS_NAME,
		GOODS_TYPE,
		GOODS_PRICE,
		GOODS_TRUE_PRICE,
		GOODS_CODE,
		IS_USE,
		GOODS_DW,
		GOODS_PXXH,
		GOODS_SPECIFICATION,
		GOODS_RECIPE,
		GOODS_TASTE,
		GOODS_DESC,
		GOODS_LABEL,
		SHOW_RANGE,
		PICTURE_URL,
		GOODS_INTRODUCTION,
		CREATE_BY,
		CREATE_TIME
		)
		VALUES
		(
		#{UUID},
		#{GTYPE_ID},
		#{GOODS_NAME},
		#{GOODS_TYPE},
		#{GOODS_PRICE},
		#{GOODS_TRUE_PRICE},
		#{GOODS_CODE},
		#{IS_USE},
		#{GOODS_DW},
		#{GOODS_PXXH},
		#{GOODS_SPECIFICATION},
		#{GOODS_RECIPE},
		#{GOODS_TASTE},
		#{GOODS_DESC},
		#{GOODS_LABEL},
		#{SHOW_RANGE},
		#{PICTURE_URL},
		#{GOODS_INTRODUCTION},
		#{CREATE_BY},
		NOW()
		);
	</insert>

	<!-- 根据类别商品类别ID查询当前类别下商品的总数量 -->
	<select id="findGoodsCountByGtypeId" parameterMap="BaseParameterMap"
		resultMap="BaseResultMap">
		SELECT COUNT(GOODS_PK) as goodsCount FROM sc_goods WHERE
		GTYPE_FK = #{GTYPE_ID};
	</select>

	<!-- 根据商品ID查询该商品类别下有有多少商品 -->
	<select id="findGoodsCountByGoodsId" parameterMap="BaseParameterMap"
		resultMap="BaseResultMap">
		SELECT COUNT(GOODS_PK) as goodsCount FROM sc_goods WHERE
		GTYPE_FK = (SELECT
		GTYPE_FK FROM sc_goods WHERE GOODS_PK =
		#{GOODS_ID});
	</select>

	<update id="updateGoodsById" parameterMap="BaseParameterMap">
		UPDATE
		sc_goods
		SET
		GOODS_NAME = #{GOODS_NAME},
		GOODS_TYPE = #{GOODS_TYPE},
		GOODS_PRICE =
		#{GOODS_PRICE},
		GOODS_TRUE_PRICE = #{GOODS_TRUE_PRICE},
		GOODS_CODE =
		#{GOODS_CODE},
		IS_USE = #{IS_USE},
		GOODS_DW = #{GOODS_DW},
		GOODS_PXXH =
		#{GOODS_PXXH},
		GOODS_SPECIFICATION = #{GOODS_SPECIFICATION},
		GOODS_RECIPE = #{GOODS_RECIPE},
		GOODS_TASTE = #{GOODS_TASTE},
		GOODS_DESC = #{GOODS_DESC},
		GOODS_LABEL = #{GOODS_LABEL},
		PICTURE_URL =
		#{PICTURE_URL},
		GOODS_INTRODUCTION = #{GOODS_INTRODUCTION},
		UPDATE_BY =
		#{UPDATE_BY},
		UPDATE_TIME = NOW()
		WHERE
		GOODS_PK = #{GOODS_ID};
	</update>

	<!-- 通过商品id查询部分信息 -->
	<select id="selectGoodsPartMessById" parameterMap="BaseParameterMap"
		resultMap="BaseResultMap">
		SELECT gt.GTYPE_STATE, g.GOODS_PXXH, g.PICTURE_URL,
		COUNT(g2.GOODS_PK) as goodsCount FROM sc_goods g, sc_goods g2,
		sc_goods_type gt WHERE g.GOODS_PK= #{GOODS_ID} AND g.GTYPE_FK =
		g2.GTYPE_FK AND gt.GTYPE_PK = g.GTYPE_FK;
	</select>

	<!-- 根据shopId查询该店铺所有商品(商品主键， 商品所属类别ID， 商品名字) -->
	<select id="findAllGoodsByShopId" parameterMap="BaseParameterMap"
		resultMap="BaseResultMap">
		SELECT GOODS_PK, GTYPE_FK, GOODS_NAME FROM sc_goods WHERE
		<if test="IS_USE == true">
			IS_USE = '1' AND
		</if>
		<if test="ALL_GOODS != true">
			GOODS_NUM != '0' AND
		</if>
		GTYPE_FK IN (SELECT GTYPE_PK FROM sc_goods_type WHERE SHOP_FK =
		#{SHOP_ID});
	</select>

	<!-- 根据shopId查询该商铺所有商品类别(类别ID，类别名字，类别路径) -->
	<select id="findAllGtypeIdByShopId" parameterMap="BaseParameterMap"
		resultMap="BaseResultMap">
		SELECT GTYPE_PK, GTYPE_NAME, GTYPE_PATH FROM sc_goods_type
		WHERE SHOP_FK = #{SHOP_ID};
	</select>


	<!-- 删除商品类别的时候删除商品 -->
	<delete id="deleteGoodsByGTypePK" parameterMap="BaseParameterMap">
		DELETE FROM
		sc_goods
		WHERE GTYPE_FK IN (
		SELECT GTYPE_PK FROM SC_GOODS_TYPE WHERE
		GTYPE_PATH LIKE '%${GTYPE_PK}%'
		)
	</delete>

	<!-- 修改商品数量 -->
	<update id="updateGoodsNumByGoodId" parameterMap="BaseParameterMap">
		UPDATE
		sc_goods
		SET
		GOODS_NUM = #{GOODS_NUM}
		WHERE
		GOODS_PK = #{GOODS_ID};
	</update>
</mapper>