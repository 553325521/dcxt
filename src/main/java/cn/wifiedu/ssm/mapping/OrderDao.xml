<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="order">
	<resultMap id="BaseResultMap" type="java.util.HashMap"></resultMap>
	<parameterMap id="BaseParameterMap" type="java.util.HashMap"></parameterMap>
	<!-- 查询未支付与支付分别订单数量 -->
	<select id="selectOrderNumber" parameterMap="BaseParameterMap"
		resultMap="BaseResultMap">
		select
		o.ORDER_PAY_STATE,count(*) as ORDER_NUMBER
		from sc_order o
		WHERE (o.ORDER_DIVISION = '0' OR o.ORDER_DIVISION = '1')
		AND str_to_date(CREATE_TIME,'%Y-%m-%d %H:%i')
		BETWEEN str_to_date(#{CREATE_TIME},'%Y-%m-%d %H:%i')
		AND str_to_date(#{END_TIME},'%Y-%m-%d %H:%i')
		AND FK_SHOP = #{FK_SHOP}
		group by o.ORDER_PAY_STATE
	</select>
	<!-- 根据时间查询订单 -->
	<select id="selectOrderByTime" parameterMap="BaseParameterMap"
		resultMap="BaseResultMap">
		select o.ORDER_PK,
		(select t.TABLES_NAME   from sc_tables t where 
			t.TABLES_PK = o.ORDER_POSITION
		 ) AS ORDER_POSITION,o.ORDER_PAY_WAY,o.ORDER_DIVISION,
		o.ORDER_CODE,o.ORDER_RS,o.ORDER_PAY_STATE,o.ORDER_STATE,
		o.ARRIVE_TIME,o.CREATE_TIME,o.CREATE_BY,
		SUM(od.ORDER_DETAILS_FS) AS TOTAL_FS,
		SUM(od.ORDER_DETAILS_GMONEY/100*od.ORDER_DETAILS_FS) AS TOTAL_MONEY
		from SC_ORDER o left join SC_ORDER_DETAILS od
		on
		o.ORDER_PK = od.FK_ORDER
		WHERE
		(o.ORDER_DIVISION = '0' OR o.ORDER_DIVISION = '2')
		AND str_to_date(CREATE_TIME,'%Y-%m-%d
		%H:%i')
		BETWEEN str_to_date(#{CREATE_TIME},'%Y-%m-%d %H:%i')
		AND str_to_date(#{END_TIME},'%Y-%m-%d %H:%i')
		<if test="ORDER_PAY_STATE != null">
			AND ORDER_PAY_STATE = #{ORDER_PAY_STATE}
		</if>
		AND FK_SHOP = #{FK_SHOP}
		GROUP BY od.FK_ORDER
		ORDER BY
		str_to_date(CREATE_TIME,'%Y-%m-%d %H:%i:%s') DESC
	</select>
	<!-- 根据选择商铺、时间、支付方式查询订单 -->
	<select id="selectOrderByShopOrTimeOrPayWay" parameterMap="BaseParameterMap"
		resultMap="BaseResultMap">
		select o.ORDER_PK,
		(select t.TABLES_NAME   from sc_tables t where 
			t.TABLES_PK = o.ORDER_POSITION
		 ) AS ORDER_POSITION,o.ORDER_PAY_WAY,
		o.ORDER_CODE,o.ORDER_RS,o.ORDER_PAY_STATE,o.ORDER_STATE,
		o.ARRIVE_TIME,o.CREATE_TIME,o.CREATE_BY,
		SUM(od.ORDER_DETAILS_FS) AS TOTAL_FS,
		SUM(od.ORDER_DETAILS_GMONEY/100*od.ORDER_DETAILS_FS) AS TOTAL_MONEY
		from SC_ORDER o left join SC_ORDER_DETAILS od
		on
		o.ORDER_PK = od.FK_ORDER
		WHERE str_to_date(o.CREATE_TIME,'%Y-%m-%d%H:%i')
		BETWEEN str_to_date(#{START_TIME},'%Y-%m-%d %H:%i')
		AND str_to_date(#{END_TIME},'%Y-%m-%d %H:%i')
		AND o.ORDER_PAY_STATE = '1'
		AND o.ORDER_PAY_WAY = #{ORDER_PAY_WAY}
		AND FK_SHOP = #{FK_SHOP}
		GROUP BY od.FK_ORDER
		ORDER BY
		str_to_date(CREATE_TIME,'%Y-%m-%d %H:%i:%s') DESC
	</select>
	<!-- 根据订单ID查询订单总金额 -->
	<select id="selectOrderTotalMoneyByOrderPK" parameterMap="BaseParameterMap" resultMap="BaseResultMap">
		select 	SUM(od.ORDER_DETAILS_GMONEY/100*od.ORDER_DETAILS_FS) AS TOTAL_MONEY
		from SC_ORDER o left join SC_ORDER_DETAILS od
		on o.ORDER_PK = od.FK_ORDER
		WHERE o.ORDER_PK = #{ORDER_PK}
		GROUP BY od.FK_ORDER
	</select>
	
	
 	<!-- 根据订单id查询订单详情 -->
 	<select id="selectOrderDetailByOrderPK" parameterMap="BaseParameterMap" resultMap="BaseResultMap">
 		select 	o.ORDER_PK,
 			(select t.TABLES_NAME   from sc_tables t where 
			t.TABLES_PK = o.ORDER_POSITION
		 	) AS ORDER_POSITION,
			o.ORDER_CODE,o.ORDER_RS,o.ORDER_PAY_STATE,o.ORDER_STATE,
			o.ARRIVE_TIME,o.CREATE_TIME,
			od.ORDER_DETAILS_PK,od.ORDER_DETAILS_GNAME,
			od.ORDER_DETAILS_GMONEY,od.ORDER_DETAILS_FS
		from SC_ORDER o left join SC_ORDER_DETAILS od
		on o.ORDER_PK = od.FK_ORDER
		WHERE o.ORDER_PK =
		#{ORDER_PK}
	</select>
	<!-- 根据订单详情id删除订单里某一种菜品 -->
	<delete id="deleteOrderDetailByORDER_DETAILS_PK" parameterMap="BaseParameterMap">
		DELETE FROM SC_ORDER_DETAILS
		WHERE ORDER_DETAILS_PK =
		#{ORDER_DETAILS_PK};
	</delete>

	<select id="countByExample" parameterMap="BaseParameterMap"
		resultMap="BaseResultMap">
		SELECT COUNT(ORDER_PK) as ORDER_COUNT FROM SC_ORDER WHERE
		str_to_date(CREATE_TIME,'%Y-%m-%d %H:%i') BETWEEN CONCAT_WS('',
		date_format(now(),'%y-%m-%d'), ' 00:00') AND CONCAT_WS('',
		date_format(now(),'%y-%m-%d'), ' 23:59');
	</select>

	<select id="checkIsExitByExample" parameterMap="BaseParameterMap"
		resultMap="BaseResultMap">
		SELECT COUNT(ORDER_PK) as ORDER_COUNT FROM SC_ORDER WHERE
		ORDER_CODE = #{ORDER_CODE};
	</select>

	<insert id="insertOrderInfo" parameterMap="BaseParameterMap">
		INSERT INTO SC_ORDER
		<trim prefix="(" suffix=")" suffixOverrides=",">
			ORDER_PK,
			ORDER_POSITION,
			ORDER_CODE,
			ORDER_RS,
			ORDER_PAY_STATE,
			ORDER_STATE,
			ARRIVE_TIME,
			FK_SHOP,
			CREATE_TIME,
			CREATE_BY
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			#{UUID},
			#{ORDER_POSITION},
			#{ORDER_CODE},
			#{ORDER_RS},
			'0',
			#{ORDER_STATE},
			#{ARRIVE_TIME},
			#{FK_SHOP},
			NOW(),
			#{CREATE_BY},
		</trim>
	</insert>

	<insert id="insertOrderDeatilInfo" parameterMap="BaseParameterMap">
		INSERT INTO SC_ORDER_DETAILS
		<trim prefix="(" suffix=")" suffixOverrides=",">
			ORDER_DETAILS_PK,
			ORDER_DETAILS_GNAME,
			ORDER_DETAILS_FS,
			ORDER_DETAILS_GMONEY,
			FK_ORDER,
			ORDER_DETAILS_FORMAT,
			ORDER_DETAILS_TASTE,
			ORDER_DETAILS_MAKING,
			ORDER_DETAILS_DW,
			FK_GOODS,
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			#{UUID},
			#{GOODS_NAME},
			#{GOODS_NUM},
			#{GOODS_PRICE},
			#{FK_ORDER},
			#{GOODS_FORMAT},
			#{GOODS_TASTE},
			#{GOODS_MAKING},
			#{GOODS_DW},
			#{FK_GOODS},
		</trim>
	</insert>
	<!-- 查询今日智慧云订单消费总金额 -->
	<select id="selectZHYMoney" parameterMap="BaseParameterMap" resultMap="BaseResultMap">
		SELECT o.ORDER_SHOPMONEY  FROM sc_order o WHERE str_to_date(o.CREATE_TIME,'%Y-%m-%d %H:%i:%s') 
			BETWEEN str_to_date(#{todayStart},'%Y-%m-%d %H:%i:%s') 
			AND str_to_date(#{todayEnd},'%Y-%m-%d %H:%i:%s')
			AND o.FK_SHOP = #{FK_SHOP}
			AND o.ORDER_DIVISION = '1'
			AND o.ORDER_PAY_STATE = '1'
	</select>
	<!-- 查询今日智慧云订单商品总份数 -->
	<select id="selectZHYOrderNumber" parameterMap="BaseParameterMap" resultMap="BaseResultMap">
		SELECT COUNT(od.ORDER_DETAILS_FS) AS ZHY_ORDER_NUMBER FROM sc_order o LEFT JOIN sc_order_details od
			ON o.ORDER_PK = od.FK_ORDER
			WHERE o.FK_SHOP = #{FK_SHOP}
			 AND str_to_date(o.CREATE_TIME,'%Y-%m-%d %H:%i:%s') 
			BETWEEN str_to_date(#{todayStart},'%Y-%m-%d %H:%i:%s') 
			AND str_to_date(#{todayEnd},'%Y-%m-%d %H:%i:%s')
	</select>
	<!-- 查询今日饿百订单消费总金额 -->
	<select id="selectEBMoney" parameterMap="BaseParameterMap" resultMap="BaseResultMap">
		SELECT eb.ORDER_SHOP_FEE FROM sc_waimai_eb_order eb
	 		WHERE str_to_date(eb.CREATE_TIME,'%Y-%m-%d %H:%i:%s') 
				BETWEEN str_to_date(#{todayStart},'%Y-%m-%d %H:%i:%s') 
				AND str_to_date(#{todayEnd},'%Y-%m-%d %H:%i:%s')
				AND eb.SHOP_BAIDU_ID = (SELECT s.EB_SHOP_ID  FROM sc_shop_info s 
					WHERE s.SHOP_ID = #{FK_SHOP})
	</select>
	<!-- 查询今日饿百订单商品总份数-->
	<select id="selectEBOrderNumber" parameterMap="BaseParameterMap" resultMap="BaseResultMap">
		SELECT COUNT(od.ORDER_DETAILS_FS) AS EB_ORDER_NUMBER FROM sc_waimai_eb_order eb 
			LEFT JOIN sc_order_details od ON eb.ORDER_PK = od.FK_ORDER 
			WHERE str_to_date(eb.CREATE_TIME,'%Y-%m-%d %H:%i:%s') 
					BETWEEN str_to_date(#{todayStart},'%Y-%m-%d %H:%i:%s') 
					AND str_to_date(#{todayEnd},'%Y-%m-%d %H:%i:%s')
					AND eb.SHOP_BAIDU_ID = (SELECT s.EB_SHOP_ID  FROM sc_shop_info s 
							WHERE s.SHOP_ID = #{FK_SHOP})
	</select>
	

	<select id="loadCountOrderWei" parameterMap="BaseParameterMap"
		resultMap="BaseResultMap">
		SELECT COUNT(ORDER_PK) as ORDER_COUNT FROM SC_ORDER WHERE
		ORDER_PAY_STATE = '0' AND ORDER_STATE = '2' AND FK_SHOP = #{FK_SHOP}
		AND CREATE_BY = #{FK_USER}
	</select>

	
</mapper>