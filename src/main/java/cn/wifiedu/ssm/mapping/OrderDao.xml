<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="order" >
  <resultMap id="BaseResultMap" type="java.util.HashMap" ></resultMap>
  <parameterMap id="BaseParameterMap" type="java.util.HashMap" ></parameterMap>
  	<!-- 查询未支付与支付分别订单数量 -->
  	<select id="selectOrderNumber"  parameterMap="BaseParameterMap" resultMap="BaseResultMap">
  		select 
  			o.ORDER_PAY_STATE,count(*) as ORDER_NUMBER 
  		from sc_order o 
  		WHERE str_to_date(CREATE_TIME,'%Y-%m-%d %H:%i') 
			BETWEEN str_to_date(#{CREATE_TIME},'%Y-%m-%d %H:%i') 
			AND str_to_date(#{END_TIME},'%Y-%m-%d %H:%i')
			AND FK_SHOP = #{FK_SHOP}
  		group by o.ORDER_PAY_STATE
  	</select>	
	<!-- 根据时间查询订单 -->
	<select id="selectOrderByTime" parameterMap="BaseParameterMap" resultMap="BaseResultMap">
		select 	o.ORDER_PK,o.ORDER_POSITION,o.ORDER_PAY_WAY,
			o.ORDER_CODE,o.ORDER_RS,o.ORDER_PAY_STATE,o.ORDER_STATE,
			o.ARRIVE_TIME,o.CREATE_TIME,o.CREATE_BY,
			SUM(od.ORDER_DETAILS_FS) AS TOTAL_FS,
			SUM(od.ORDER_DETAILS_GMONEY/100*od.ORDER_DETAILS_FS) AS TOTAL_MONEY
		from SC_ORDER o left join SC_ORDER_DETAILS od
		on o.ORDER_PK = od.FK_ORDER
		WHERE str_to_date(CREATE_TIME,'%Y-%m-%d %H:%i') 
			BETWEEN str_to_date(#{CREATE_TIME},'%Y-%m-%d %H:%i') 
			AND str_to_date(#{END_TIME},'%Y-%m-%d %H:%i')
		<if test="ORDER_PAY_STATE != null" >
        	AND ORDER_PAY_STATE = #{ORDER_PAY_STATE}
      	</if>
      		AND FK_SHOP = #{FK_SHOP}
		GROUP BY od.FK_ORDER
		ORDER BY str_to_date(CREATE_TIME,'%Y-%m-%d %H:%i:%s') DESC
	</select>
 	<!-- 根据订单id查询订单详情 -->
 	<select id="selectOrderDetailByOrderPK" parameterMap="BaseParameterMap" resultMap="BaseResultMap">
 		select 	o.ORDER_PK,o.ORDER_POSITION,
			o.ORDER_CODE,o.ORDER_RS,o.ORDER_PAY_STATE,o.ORDER_STATE,
			o.ARRIVE_TIME,o.CREATE_TIME,
			od.ORDER_DETAILS_PK,od.ORDER_DETAILS_GNAME,
			od.ORDER_DETAILS_GMONEY,od.ORDER_DETAILS_FS
		from SC_ORDER o left join SC_ORDER_DETAILS od
		on o.ORDER_PK = od.FK_ORDER
		WHERE o.ORDER_PK = #{ORDER_PK}
 	</select>
 	<!-- 根据订单详情id删除订单里某一种菜品 -->
	<delete id="deleteOrderDetailByORDER_DETAILS_PK" parameterMap="BaseParameterMap">
		DELETE FROM SC_ORDER_DETAILS
		WHERE ORDER_DETAILS_PK = #{ORDER_DETAILS_PK};
	</delete>
	
	<select id="countByExample" parameterMap="BaseParameterMap" resultMap="BaseResultMap">
		SELECT COUNT(ORDER_PK) as ORDER_COUNT FROM SC_ORDER WHERE str_to_date(CREATE_TIME,'%Y-%m-%d %H:%i') BETWEEN CONCAT_WS('', date_format(now(),'%y-%m-%d'), ' 00:00') AND CONCAT_WS('', date_format(now(),'%y-%m-%d'), ' 23:59');
	</select>
	
	<select id="checkIsExitByExample" parameterMap="BaseParameterMap" resultMap="BaseResultMap">
		SELECT COUNT(ORDER_PK) as ORDER_COUNT FROM SC_ORDER WHERE ORDER_CODE = #{ORDER_CODE};
	</select>
	
	<insert id="insertOrderInfo" parameterMap="BaseParameterMap">
		INSERT INTO SC_ORDER
		<trim prefix="(" suffix=")" suffixOverrides=",">
			ORDER_PK,
			ORDER_POSITION,
			ORDER_CODE,
			ORDER_RS,
			ORDER_PAY_STATE,
			ORDER_STATE,
			ARRIVE_TIME,
			FK_SHOP,
			CREATE_TIME,
			CREATE_BY
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			#{UUID},
			#{ORDER_POSITION},
			#{ORDER_CODE},
			#{ORDER_RS},
			'0',
			#{ORDER_STATE},
			#{ARRIVE_TIME},
			#{FK_SHOP},
			NOW(),
			#{CREATE_BY},
		</trim>
	</insert>
	
	<insert id="insertOrderDeatilInfo" parameterMap="BaseParameterMap">
		INSERT INTO SC_ORDER_DETAILS
		<trim prefix="(" suffix=")" suffixOverrides=",">
			ORDER_DETAILS_PK,
			ORDER_DETAILS_GNAME,
			ORDER_DETAILS_FS,
			ORDER_DETAILS_GMONEY,
			FK_ORDER,
			ORDER_DETAILS_FORMAT,
			ORDER_DETAILS_TASTE,
			ORDER_DETAILS_MAKING,
			ORDER_DETAILS_DW,
			FK_GOODS,
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			#{UUID},
			#{GOODS_NAME},
			#{GOODS_NUMBER},
			#{GOODS_PRICE},
			#{FK_ORDER},
			#{GOODS_FORMAT},
			#{GOODS_TASTE},
			#{GOODS_MAKING},
			#{GOODS_DW},
			#{FK_GOODS},
		</trim>
	</insert>
	
</mapper>