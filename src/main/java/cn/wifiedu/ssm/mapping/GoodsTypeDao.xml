<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="goodsType" >
  <resultMap id="BaseResultMap" type="java.util.HashMap" ></resultMap>
  <parameterMap id="BaseParameterMap" type="java.util.HashMap" ></parameterMap>	
	<!-- 根据PID查询当前级别商品分类序号 -->
	<select id="loadGoodsTypeOrder" parameterMap="BaseParameterMap"
		resultMap="BaseResultMap">
		SELECT 
		GTYPE_ORDER  
		FROM sc_goods_type 
		WHERE GTYPE_PID = #{GTYPE_PID}
		AND SHOP_FK = #{SHOP_FK}
		ORDER BY GTYPE_ORDER DESC
		LIMIT 1
	</select>
	<!-- 根据PID查询当前商品类别 -->
	<select id="loadGoodsTypeListByPID" parameterMap="BaseParameterMap"
		resultMap="BaseResultMap">
		SELECT * 
		FROM sc_goods_type 
		WHERE GTYPE_PID = #{GTYPE_PID}
		AND SHOP_FK = #{SHOP_FK}
		ORDER BY GTYPE_ORDER
	</select>
	 <!--添加商品类别表  -->
	<insert id="insertGoodsType" parameterMap="BaseParameterMap">
		insert into 
			SC_GOODS_TYPE
			(
			GTYPE_PK,
			GTYPE_NAME,
			GTYPE_PID,
			GTYPE_ORDER,
			GTYPE_AREA,
			GTYPE_STATE,
			GTYPE_ATTACH,
			GTYPE_LEVEL,
			GTYPE_BZ,
			SHOP_FK,
			CREATE_BY,
			CREATE_TIME
			)
	values(
			#{UUID},
			#{GTYPE_NAME},
			#{GTYPE_PID},
			#{GTYPE_ORDER},
			#{GTYPE_AREA},
			#{GTYPE_STATE},
			#{GTYPE_ATTACH},
			#{GTYPE_LEVEL},
			#{GTYPE_BZ},
			#{SHOP_FK},
			#{CREATE_BY},
			NOW()
	)
	</insert>
<!-- 	根据ID查询商品分类名称 -->
	<select id="selectGoodsTypePNameByPID" parameterMap="BaseParameterMap"
		resultMap="BaseResultMap">
		SELECT  *
		FROM sc_goods_type 
		WHERE GTYPE_PK = #{GTYPE_PID}
	</select>
	<!-- 查询跟父分类同级且没有商品的分类 -->
	<select id="selectGTypeNameButNoGoodsByPID" parameterMap="BaseParameterMap"
		resultMap="BaseResultMap">
		SELECT sgt.GTYPE_NAME
		FROM sc_goods_type sgt 
		WHERE  sgt.GTYPE_PID  = (SELECT sgt1.GTYPE_PID from sc_goods_type sgt1  where sgt1.GTYPE_PK = #{GTYPE_PID}) 
		AND (SELECT COUNT(*) FROM sc_goods WHERE GTYPE_FK = sgt.GTYPE_PK) = 0
	</select>
	<!-- 根据PID查询该类下的排序序号(从小到大排序) -->
	<select id="selectGTypeOrderByPID" parameterMap="BaseParameterMap"
		resultMap="BaseResultMap">
		SELECT sgt.GTYPE_ORDER
		FROM sc_goods_type sgt
		WHERE sgt.GTYPE_PID = 	#{GTYPE_PID}
		order by sgt.GTYPE_ORDER
	</select>
	<!-- 根据分类ID更新某个分类 -->
	<update id="updateGoodsType" parameterMap="BaseParameterMap">
		UPDATE SC_GOODS_TYPE SET
		GTYPE_NAME = #{GTYPE_NAME},
		GTYPE_ORDER = #{GTYPE_ORDER},
		GTYPE_AREA = #{GTYPE_AREA},
		GTYPE_STATE = #{GTYPE_STATE},
		GTYPE_BZ = #{GTYPE_BZ},
		UPDATE_BY = #{UPDATE_BY},
		UPDATE_TIME = NOW()
		WHERE GTYPE_PK = #{GTYPE_PK}
	</update>
	<!-- 商品分类编辑时更新商品分类的排序序号(当序号往前移动变小) -->
	<update id="updateGoodsTypeOrderChangeSmall" parameterMap="BaseParameterMap">
		UPDATE SC_GOODS_TYPE SET
		GTYPE_ORDER = GTYPE_ORDER +1
		WHERE GTYPE_ORDER &lt; #{GTYPE_OLD_ORDER} AND GTYPE_ORDER &gt;= #{GTYPE_ORDER}  AND GTYPE_PID = #{PID} AND SHOP_FK = #{SHOP_FK}
	</update>
	<!-- 商品分类编辑时更新商品分类的排序序号(当序号往前移动变大) -->
	<update id="updateGoodsTypeOrderChangeLarge" parameterMap="BaseParameterMap">
			UPDATE SC_GOODS_TYPE SET
			GTYPE_ORDER = GTYPE_ORDER -1
			WHERE GTYPE_ORDER &lt;= #{GTYPE_ORDER} AND GTYPE_ORDER &gt; #{GTYPE_OLD_ORDER}  AND GTYPE_PID = #{PID} AND SHOP_FK = #{SHOP_FK}
	</update>
	<!-- 更新商品分类的路径 -->
	<update id="updateGoodsTypePath" parameterMap="BaseParameterMap">
			UPDATE SC_GOODS_TYPE SET
			GTYPE_PATH = #{GTYPE_PATH}
			WHERE  GTYPE_PK = #{GTYPE_PK}
	</update>
	<!-- 删除商品分类 -->
	<delete id="deleteGoodsTypeByID" parameterMap="BaseParameterMap">
		DELETE FROM SC_GOODS_TYPE
		WHERE GTYPE_PATH  like '%${GTYPE_PK}%'
	</delete>
	
		<!-- 根据类别id查询 -->
	<select id="selectGtypeNameById"  parameterMap="BaseParameterMap"
		resultMap="BaseResultMap">
		SELECT GTYPE_NAME, GTYPE_AREA FROM sc_goods_type WHERE GTYPE_PK = #{GTYPE_ID};
	</select>
</mapper>