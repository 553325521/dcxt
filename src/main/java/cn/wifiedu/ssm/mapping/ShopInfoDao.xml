<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ShopInfo">
	<resultMap id="BaseResultMap" type="java.util.HashMap"></resultMap>
	<parameterMap id="BaseParameterMap" type="java.util.HashMap"></parameterMap>

	<update id="editFavour" parameterMap="BaseParameterMap">
		update sc_preferntial set 
			name = #{name},
			is_use = #{is_use},
			actor = #{actor},
			start_time = #{start_time},
			end_time = #{end_time},
			period = #{period},
			fk_shop = #{fk_shop},
			fk_rule = #{fk_rule},
			points = #{jifen},
			remark = #{remark},
			update_by = #{userId},
			update_time = date_format(NOW(), '%Y-%c-%d %h:%i:%s' ),
			period_week = #{time_week},
			period_period = #{time_time}
		where preferntial_pk = #{favourPK}
	</update>
	
	<update id="delFavour" parameterMap="BaseParameterMap">
		update sc_preferntial set 
			delete_flag = '1',
			update_time = date_format(NOW(), '%Y-%c-%d %h:%i:%s' ),
			update_by = #{userId}
		where preferntial_pk = #{favPk}
	</update>
	
	<select id="favourList" resultMap="BaseResultMap" parameterMap="BaseParameterMap">
		select
			preferntial_pk,
			name,
			is_use,
			actor,
			start_time,
			end_time,
			period,
			fk_shop,
			fk_rule,
			(select rule_name from sc_preferntial_rule where fk_rule = preferential_rule_pk)rule_name,
			(select good_scope from sc_preferntial_rule where fk_rule = preferential_rule_pk)good_scope,
			(select shop_name from sc_shop_info where shop_id = fk_shop)shop_name,
			points,
			remark,
			create_by,
			create_time,
			delete_flag,
			period_week,
			period_period
		from sc_preferntial
		where delete_flag = 0
		<if test="favourPK != null and favourPK != '' ">
			AND preferntial_pk = #{favourPK}
		</if>
		<if test="userId != null and userId != '' ">
			and create_by = #{userId}
		</if>
		order by create_time desc
	</select>
	
	<insert id="saveFavour" parameterMap="BaseParameterMap">
		insert into sc_preferntial
		(
			preferntial_pk,
			name,
			is_use,
			actor,
			start_time,
			end_time,
			period,
			fk_shop,
			fk_rule,
			points,
			remark,
			create_by,
			create_time,
			delete_flag,
			period_week,
			period_period
		)
		values
		(
			#{UUID},
			#{name},
			#{is_use},
			#{actor},
			#{start_time},
			#{end_time},
			#{period},
			#{fk_shop},
			#{fk_rule},
			#{jifen},
			#{remark},
			#{userId},
			date_format(NOW(), '%Y-%c-%d %h:%i:%s' ),
			'0',
			#{time_week},
			#{time_time}
		)
	</insert>
	
	<select id="getMyShop" resultMap="BaseResultMap" parameterMap="BaseParameterMap">
		select
			fk_shop,
			user_shop_id,
			(select shop_name from sc_shop_info where shop_id = fk_shop)shop_name
		from sc_user_shop
		where is_use = '0'
		and fk_user = #{userId}
	</select>
	
	<update id="deleteAllRuleGood" parameterMap="BaseParameterMap">
		update sc_preferntial_rule_good set 
			delete_flag = '1'
		where fk_preferntial_rule = #{rulePk}
		and delete_flag = '0'
	</update>
	
	<update id="editYouhuimaidan" parameterMap="BaseParameterMap">
		update sc_preferntial_rule set
			rule_name = #{rule_name},
			rule_order = #{rule_order},
			is_use = #{is_use},
			rule_model = #{rule_model},
			remark = #{remark},
			good_scope = #{good_scope},
			rule_model_first = #{rule_model_first},
			rule_model_second = #{rule_model_second},
			update_by = #{USER_ID},
			update_time = date_format(NOW(), '%Y-%c-%d %h:%i:%s' ),
			fk_shop = #{SHOP_ID}
		where preferential_rule_pk = #{rulePk}
	</update>
	
	<select id="getGoodTypeForRule" resultMap="BaseResultMap" parameterMap="BaseParameterMap">
		select
			sc_preferntial_rule_good_pk,
			fk_preferntial_rule,
			fk_goodtype,
			create_by,
			create_time,
			delete_flag
		from sc_preferntial_rule_good
		where fk_preferntial_rule = #{rulePk}
		and delete_flag = '0'
	</select>
	
	<update id="deleteFavourBaseInfo" parameterMap="BaseParameterMap">
		update sc_preferntial_rule set
			delete_flag = '1',
			update_time = date_format(NOW(), '%Y-%c-%d %h:%i:%s' )
		where preferential_rule_pk = #{rulePk}
	</update>
	
	<select id="getfavourBaseInfo" resultMap="BaseResultMap" parameterMap="BaseParameterMap">
		select
			preferential_rule_pk,
			rule_name,
			rule_order,
			is_use,
			rule_model,
			remark,
			good_scope,
			rule_model_first,
			rule_model_second,
			create_by,
			create_time,
			delete_flag,
			fk_shop
		from sc_preferntial_rule
		where delete_flag = '0'
		<if test="rulePk != null and rulePk != '' ">
			AND preferential_rule_pk = #{rulePk}
		</if>
		<if test="userId != null and userId != '' ">
			and create_by = #{userId}
		</if>
		order by rule_order asc
	</select>
	
	<insert id="saveYouhuimaidanGood" parameterMap="BaseParameterMap">
		insert into sc_preferntial_rule_good
		(
			sc_preferntial_rule_good_pk,
			fk_preferntial_rule,
			fk_goodtype,
			create_by,
			create_time,
			delete_flag
		)
		values
		(
			#{UUID},
			#{fk_preferential_rule},
			#{fk_goodtype},
			#{USER_ID},
			date_format(NOW(), '%Y-%c-%d %h:%i:%s' ),
			'0'
		)
	</insert>
	
	<insert id="saveYouhuimaidan" parameterMap="BaseParameterMap">
		insert into sc_preferntial_rule
		(
			preferential_rule_pk,
			rule_name,
			rule_order,
			is_use,
			rule_model,
			remark,
			good_scope,
			rule_model_first,
			rule_model_second,
			create_by,
			create_time,
			delete_flag,
			fk_shop
		)
		values
		(
			#{UUID},
			#{rule_name},
			#{rule_order},
			#{is_use},
			#{rule_model},
			#{remark},
			#{good_scope},
			#{rule_model_first},
			#{rule_model_second},
			#{USER_ID},
			date_format(NOW(), '%Y-%c-%d %h:%i:%s' ),
			'0',
			#{SHOP_ID}
		)
	</insert>
	
	<update id="saveShopInfo" parameterMap="BaseParameterMap">
		update sc_shop_info set 
			SHOP_NAME = #{SHOP_NAME},
			SHOP_TEL = #{SHOP_TEL},
			SHOP_TYPE = #{SHOP_TYPE},
			SHOP_AREA = #{SHOP_AREA},
			SHOP_GPS = #{SHOP_GPS},
			SHOP_ADDRESS = #{SHOP_ADDRESS},
			UPDATE_BY = #{userPk},
			UPDATE_TIME = date_format(NOW(), '%Y-%c-%d %h:%i:%s' ),
			SHOP_HOURS = #{SHOP_HOURS},
			SUPPORT = #{SUPPORT},
			IMG_LOGO = #{IMG_LOGO},
			IMG_HEAD = #{IMG_HEAD},
			IMG_BODAY = #{IMG_BODAY},
			SHOP_REMARK = #{SHOP_REMARK}
		where SHOP_ID = #{SHOP_ID}
	</update>
	
	<select id="getShopInfo" resultMap="BaseResultMap" parameterMap="BaseParameterMap">
		select
			SHOP_ID,
			SHOP_NAME,
			SHOP_TEL,
			SHOP_TYPE,
			SHOP_AREA,
			SHOP_GPS,
			SHOP_ADDRESS,
			SHOP_STATE,
			SERVICETYPE_FK,
			OVER_DATA,
			CREATE_BY,
			CREATE_TIME,
			UPDATE_BY,
			UPDATE_TIME,
			SHOP_HOURS,
			SUPPORT,
			IMG_LOGO,
			IMG_HEAD,
			IMG_BODAY,
			SHOP_REMARK
		from sc_shop_info
		where shop_id = #{SHOP_ID}
	</select>
	
	<!-- 查询店面积分折扣 -->
	<select id="selectShopIntegraByShopId" resultMap="BaseResultMap" parameterMap="BaseParameterMap">
		SELECT
			SHOP_ID,
			SHOP_DMZKXS,
			SHOP_DMJFXS,
			SHOP_SRZKXS,
			SHOP_SRJFXS
		FROM 
			sc_shop_info
		WHERE 
			SHOP_ID = #{SHOP_ID};
	</select>
	
	<!-- 根据店铺id修改店铺积分折扣 -->
	<update  id="updateShopIntegraByShopId" parameterMap="BaseParameterMap">
		UPDATE 
			sc_shop_info SET SHOP_DMZKXS = #{SHOP_DMZKXS}, SHOP_DMJFXS = #{SHOP_DMJFXS}, SHOP_SRZKXS = #{SHOP_SRZKXS}, SHOP_SRJFXS = #{SHOP_SRJFXS}
		WHERE
			 SHOP_ID = #{SHOP_ID};
	</update>
	
	<!-- 根绝店铺id查询发放的会员卡信息 -->
	<select id="selectVipGiveOutByShopId" resultMap="BaseResultMap" parameterMap="BaseParameterMap">
		SELECT 
			USER_VCARD_XFDS, USER_VCARD_CSJF, VCARD_NAME, USER_VCARD_TIME,USER_SN,USER_PHONE 
		FROM 
			sc_user_vcard suv, sc_vip_card svc, sc_user su 
		WHERE 
			svc.VCARD_PK IN (SELECT VIP_CARD_FK FROM sc_shop_vcard WHERE SHOP_FK = #{SHOP_ID}) AND svc.VCARD_PK = VCARD_FK AND su.USER_PK = suv.USER_FK;
	</select>
</mapper>